{"version":3,"file":"static/js/528.42e6c623.chunk.js","mappings":"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","sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","webpack://samurai-way/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://samurai-way/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__wI1Fu\"};","import React, {ChangeEvent, useEffect, useState} from 'react';\r\nimport {ProfilePropsType} from '../Profile';\r\n\r\ntype ProfileStatusWithHooksPropsType = {\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\nconst ProfileStatusWithHooks: React.FC<ProfileStatusWithHooksPropsType> = ({status, updateStatus}) => {\r\n    const [editMode, setEditMode] = useState<boolean>(false)\r\n    const [localStatus, setLocalStatus] = useState<string>(status)\r\n    useEffect(() => {\r\n        setLocalStatus(status)\r\n    }, [status])\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        updateStatus(localStatus)\r\n    }\r\n    const setStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setLocalStatus(e.currentTarget.value)\r\n    }\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{status || '------'}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input onChange={setStatusChange} onBlur={deactivateEditMode} value={localStatus} autoFocus/>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css'\r\nimport Preloader from '../../common/preloader/preloader';\r\nimport {ProfilePropsType} from '../Profile';\r\nimport manWithoutAvatar from '../../../assets/images/manWithoutFoto.jpg';\r\nimport ProfileStatus from './ProfileStatus';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\ntype ProfileInfoPropsType = {\r\n    profile: ProfilePropsType\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\nexport const ProfileInfo = (props: ProfileInfoPropsType) => {\r\n    if(!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return <div>\r\n        <div className={s.descriptionBlock}>\r\n            <img src={props.profile.photos.large ? props.profile.photos.large : manWithoutAvatar} width='200' height='200'/>\r\n        </div>\r\n        <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n        <div>{props.profile.aboutMe}</div>\r\n    </div>\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__dMcfn\",\"posts\":\"MyPosts_posts__FQ56d\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__WhrMP\"};","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\ntype PostPropsType = {\r\n    key: number\r\n    message: string,\r\n    likesCounter: number,\r\n}\r\n\r\nconst Post = (props: PostPropsType) => {\r\n    return <div key={props.key} className={s.item}>\r\n        <img src='https://shapka-youtube.ru/wp-content/uploads/2021/02/prikolnaya-avatarka-dlya-patsanov.jpg'/>\r\n        <p>{props.message}</p>\r\n        <div>\r\n            <span className={s.item}>like</span>\r\n            <span className={s.item}>{props.likesCounter}</span>\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\n\r\nexport default Post;\r\n","import React, {useMemo} from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport {maxLengthCreator, required} from '../../../utils/validators/validators';\r\nimport {Textarea} from '../../common/FormsControls/FormControls';\r\n\r\nexport type PostDataPropsType = {\r\n    id: number\r\n    message: string\r\n    likesCount: number\r\n}\r\n\r\ntype MyPostsPropsType = {\r\n    addPost: (newPostText: string) => void\r\n    postData: PostsDataPropsType\r\n}\r\n\r\nexport type PostsDataPropsType = Array<PostDataPropsType>;\r\n\r\nconst MyPosts = React.memo((props: MyPostsPropsType) => {\r\n\r\n    let postsElements = props.postData.map((item) => {\r\n        return <Post key={item.id} message={item.message} likesCounter={item.likesCount}/>\r\n    });\r\n\r\n    let onAddPost = (values: any) => {\r\n        props.addPost(values.newPostText)\r\n    }\r\n\r\n    return <div className={s.content}>\r\n        <div className={s.postsBlock}>\r\n            <h2>My posts</h2>\r\n            <AddNewPostReduxForm onSubmit={onAddPost}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    </div>\r\n})\r\n\r\n\r\nconst AddNewPostForm = (props: any) => {\r\n\r\n    const maxLength30 = useMemo(() => maxLengthCreator(30), [])\r\n\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field name='newPostText'\r\n                   component={Textarea}\r\n                   placeholder='Post message'\r\n                   validate={[required, maxLength30]}/>\r\n        </div>\r\n        <div>\r\n            <button>Add post</button>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst AddNewPostReduxForm = reduxForm({form: 'ProfileAddNewPostForm'})(AddNewPostForm)\r\n\r\nexport default MyPosts;\r\n","import React from 'react';\r\nimport {addPostActionCreator} from '../../../Redux/profileReducer';\r\nimport MyPosts from './MyPosts';\r\nimport {connect} from 'react-redux';\r\nimport {GetStateType} from '../../../Redux/redux-store';\r\n\r\n\r\nlet mapStateToProps = (state: GetStateType) => {\r\n    return {\r\n        postData: state.profilePage.postData,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch: any) => {\r\n    return {\r\n        addPost: (newPostText: string) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;\r\n","import React from 'react';\r\nimport {ProfileInfo} from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport {PhotosType} from '../../Redux/usersReducer';\r\n\r\nexport type ContactsType = {\r\n    facebook: string | null\r\n    github: string | null\r\n    instagram: string | null\r\n    mainLink: string | null\r\n    twitter: string | null\r\n    vk: string | null\r\n    website: string | null\r\n    youtube: string | null\r\n}\r\n\r\nexport type ProfilePropsType = {\r\n    aboutMe: string\r\n    contacts: ContactsType\r\n    fullName: string\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string\r\n    photos: PhotosType\r\n    userId: number\r\n} | null\r\n\r\n\r\ntype  ProfilePageType = {\r\n    profile: ProfilePropsType\r\n    isAuth: boolean\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\nconst Profile = (props: ProfilePageType) => {\r\n    return <div>\r\n        <ProfileInfo {...props} profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n        <MyPostsContainer/>\r\n    </div>\r\n}\r\n\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport Profile, {ProfilePropsType} from './Profile';\r\nimport {connect} from 'react-redux';\r\nimport {getUserProfile, getUserStatus, updateStatus} from '../../Redux/profileReducer';\r\nimport {GetStateType} from '../../Redux/redux-store';\r\nimport {RouteComponentProps, withRouter} from 'react-router-dom';\r\nimport {compose} from 'redux';\r\n\r\ntype PathParamsType = {\r\n    userId: string\r\n}\r\ntype MSTPT = {\r\n    profile: ProfilePropsType,\r\n    status: string\r\n    isAuth: boolean\r\n    authorisedUserId: number\r\n}\r\ntype MDTPT = {\r\n    getUserProfile: (id: number) => void\r\n    getUserStatus: (id: number) => void\r\n    updateStatus: (status: string) => void\r\n}\r\ntype PropsType = MSTPT & MDTPT & RouteComponentProps<PathParamsType>\r\n\r\nexport class ProfileContainer extends React.Component<PropsType> {\r\n    refreshProfile() {\r\n        let userId: number = +this.props.match.params.userId\r\n        if(!userId) {\r\n            userId = this.props.authorisedUserId\r\n            if(!userId) {\r\n                this.props.history.push('/login')\r\n                return\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getUserStatus(userId)\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(): void {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                <Profile {...this.props}\r\n                         profile={this.props.profile}\r\n                         updateStatus={this.props.updateStatus}\r\n\r\n                />\r\n        );\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state: GetStateType): MSTPT => {\r\n   return {\r\n       profile: state.profilePage.profile,\r\n       status: state.profilePage.status,\r\n       isAuth: state.auth.isAuth,\r\n       authorisedUserId: state.auth.userId\r\n   }\r\n}\r\n\r\nexport default compose<React.ComponentType<any>>(\r\n    connect(mapStateToProps, {getUserProfile, getUserStatus, updateStatus}),\r\n    withRouter,\r\n)(ProfileContainer);"],"names":["status","updateStatus","useState","editMode","setEditMode","localStatus","setLocalStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","onBlur","autoFocus","ProfileInfo","props","profile","className","s","src","photos","large","manWithoutAvatar","width","height","aboutMe","message","likesCounter","key","MyPosts","React","postsElements","postData","map","item","likesCount","id","AddNewPostReduxForm","onSubmit","values","addPost","newPostText","reduxForm","form","maxLength30","useMemo","maxLengthCreator","handleSubmit","Field","name","component","Textarea","placeholder","validate","required","connect","state","profilePage","dispatch","addPostActionCreator","ProfileContainer","userId","this","match","params","authorisedUserId","getUserProfile","getUserStatus","history","push","refreshProfile","compose","isAuth","auth","withRouter"],"sourceRoot":""}